#dependencies:
  #install 'Java SE Development Kit 11' https://www.oracle.com/ca-en/java/technologies/javase/jdk11-archive-downloads.html
  #install 'Android Studio' https://developer.android.com/studio
  #install 'Android SDK Build-Tools', 'Android SDK Command-line Tools', 'Android Emulator', 'Android SDK Platform-Tools' from :
      #Android Studio > Tools > SDK Manager > SDK Tools
      #or Android Studio > Preferences > Appearence & Behavior > System Settings > Android SDK > SDK Tools

variables:
  android_api: "33" #android 13
  emulator_type: "apis" #atd for api < 30 more efficient
  system_architecture: "arm64-v8a" #x86_64 or x86 for Intels
  android_system_image: "system-images;android-$android_api;google_$emulator_type;$system_architecture" # 'sdkmanager --list | grep system-images' to have all existing configs
  emulator_device: "pixel_6"
  emulator_name: "$emulator_device-api_$android_api-google_$emulator_type-arch_$system_architecture"
  emulator_adb_port: "5556" # max recommended 5586


job-android-uitests:

  stage: uitests
  tags: [ "macos-xcode13" ]
  allow_failure: true

  dependencies:
    - job-android

  before_script:
    - git submodule update --init --recursive
    - mkdir logs && mkdir reports && mkdir apks

    #define adb tcp port
    - while ${ANDROID_HOME}/platform-tools/adb devices | grep -q $emulator_adb_port; do emulator_adb_port=$(($emulator_adb_port + 2)); done
    - if [ $emulator_adb_port -gt 5586 ]; then echo "|warning| the 15 recommended ports are already used by other emulators. ADB may not function properly for this emulator"; fi
    - emulator_name=$emulator_name-$emulator_adb_port

    #install emulator system-image and create it
    - ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --install "$android_system_image" > logs/emulator.log
    - echo no | ${ANDROID_HOME}/cmdline-tools/latest/bin/avdmanager --verbose create avd --force --name $emulator_name --package $android_system_image --tag google_$emulator_type --abi $system_architecture --device $emulator_device >> logs/emulator.log

    #launch emulator
    - ${ANDROID_HOME}/platform-tools/adb start-server
    - ${ANDROID_HOME}/emulator/emulator -avd $emulator_name -port $emulator_adb_port -no-window -no-audio >> logs/emulator.log 2>&1 &
    - .gitlab-ci-files/wait-for-android-emulator -d emulator-$emulator_adb_port -m start

    - ${ANDROID_HOME}/platform-tools/adb -s emulator-$emulator_adb_port logcat -d > logs/logcats.log

  script:
    - set +e

    #launch uitest suites
    - export JAVA_HOME=`/usr/libexec/java_home -v 11`
    - export ANDROID_SERIAL=emulator-$emulator_adb_port 
    - ./gradlew -Pandroid.testInstrumentationRunnerArguments.class=org.linphone.testsuites.CallTestSuite -PscreportWindowed=false connectedAndroidTest --continue 2>&1 | tee logs/build.log
    - BUILD_RESULT=$?

    #kill emultator (twice in case a confirm dialog popup appears)
    - ${ANDROID_HOME}/platform-tools/adb -s emulator-$emulator_adb_port emu kill
    - ${ANDROID_HOME}/platform-tools/adb -s emulator-$emulator_adb_port emu kill
    - .gitlab-ci-files/wait-for-android-emulator -d emulator-$emulator_adb_port -m stop

    #delete emulator
    - ${ANDROID_HOME}/cmdline-tools/latest/bin/avdmanager --verbose delete avd --name $emulator_name >> logs/emulator.log
    - if ${ANDROID_HOME}/platform-tools/adb devices | grep -q "emulator-"; then ${ANDROID_HOME}/platform-tools/adb kill-server; fi

    - if [ $BUILD_RESULT -eq 0 ] && ! grep -q "BUILD FAILED" logs/build.log && [ ! -d app/build/reports/androidTests/connected/failures ]; then exit 0; else exit 1; fi

  after_script:
    #artifacts preparation
    - mv app/build/outputs/apk/debug/linphone-android-debug-*.apk ./apks/debug
    - mv app/build/outputs/apk/release/linphone-android-release-*.apk ./apks/release
    - mv app/build/reports/androidTests/connected/* reports
    - .gitlab-ci-files/html2xml-report -p reports
    
  artifacts:
    paths:
      - reports/*
      - logs/*
      - apks/debug/linphone-android-debug-*.apk
      - apks/release/linphone-android-release-*.apk
    when: always
    reports:
      junit:
        - reports/*.xml
    expire_in: 4 week
